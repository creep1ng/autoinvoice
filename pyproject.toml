[project]
name = "autoinvoice"
version = "0.1.0"
description = "PDF invoice processor with LLM extraction"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.16.5",
    "fastapi[standard]>=0.118.0",
    "langchain>=0.3.27",
    "langchain-openai>=0.3.34",
    "pillow>=11.3.0",
    "psycopg>=3.2.10",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "pymupdf>=1.26.4",
    "pytest>=8.4.2",
    "sqlalchemy>=2.0.43",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*.py" = ["ARG"]  # Allow unused arguments in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--cov=src --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
]
